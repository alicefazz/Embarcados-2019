1) Crie um código em C para escrever "Ola mundo!" em um arquivo chamado 'ola_mundo.txt'.
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv){

	FILE *fp;
char c [20] = "Ola Mundo!";
	int i;

	fp = fopen("ola_mundo.txt","w");

	if(!fp){
		printf("Erro ao abrir o arquivo\n");
		exit(0);
	}
for(i=0; c[i]; i++){
	fputs("Ola Mundo!\n", fp);
	}

	fclose(fp);

	return 0;
}

2) Crie um código em C que pergunta ao usuário seu nome e sua idade, e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':

$ ./ola_usuario_1
$ Digite o seu nome: Eu
$ Digite a sua idade: 30
$ cat Eu.txt
$ Nome: Eu
$ Idade: 30 anos
Crie um código em C que recebe o nome do usuário e e sua idade como argumentos de entrada (usando as variáveis argc e *argv[]), e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
$ ./ola_usuario_2 Eu 30
$ cat Eu.txt
$ Nome: Eu
$ Idade: 30 anos

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv){
	

	FILE *fp;
	char nome [20], aux[20];
	int idade;
	int i;

	printf("Digite seu nome: ");
	scanf("%s",nome);
	printf("Digite sua idade: ");
	scanf("%d",&idade);

	sprintf(aux,"%s.txt",nome);	

	fp = fopen(aux,"w");

	if(!fp){
		printf("Erro ao abrir o arquivo\n");
		exit(0);
	}
	fprintf(fp,"Nome: %s\n",nome);
	fprintf(fp,"Idade: %d\n",idade);

	fclose(fp);

	return 0;
}



3) Crie uma função que retorna o tamanho de um arquivo, usando o seguinte protótipo: int tam_arq_texto(char *nome_arquivo); Salve esta função em um arquivo separado chamado 'bib_arqs.c'. Salve o protótipo em um arquivo chamado 'bib_arqs.h'. Compile 'bib_arqs.c' para gerar o objeto 'bib_arqs.o'.

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char **argv){
	

	FILE *fp;
	char *nome,*aux,*idade;

	nome = argv[1];
	idade = argv[2];

	sprintf(aux,"%s.txt",nome);	
	
	fp = fopen(aux,"w");

	if(!fp){
		printf("Erro ao abrir o arquivo\n");
		exit(0);
	}


	fprintf(fp,"Nome: %s\n",nome);
	fprintf(fp,"Idade: %s\n",idade);

	fclose(fp);

	return 0;
}


4) Crie uma função que lê o conteúdo de um arquivo-texto e o guarda em uma string, usando o seguinte protótipo: char* le_arq_texto(char *nome_arquivo); Repare que o conteúdo do arquivo é armazenado em um vetor interno à função, e o endereço do vetor é retornado ao final. (Se você alocar este vetor dinamicamente, lembre-se de liberar a memória dele quando acabar o seu uso.) Salve esta função no mesmo arquivo da questão 4, chamado 'bib_arqs.c'. Salve o protótipo no arquivo 'bib_arqs.h'. Compile 'bib_arqs.c' novamente para gerar o objeto 'bib_arqs.o'.

#include <stdio.h>
#include <stdlib.h>
#include "bib_arqs.h"

int main(int argc, char *argv){
	
	int resultado;
	char nome_arquivo[20];

	printf("Nome do arquivo: ");
	scanf("%s",nome_arquivo);
	
	resultado = tam_arq_text(nome_arquivo);

	printf("%d\n",resultado);

	return 0;
}




5) Crie um código em C que copia a funcionalidade básica do comando cat: escrever o conteúdo de um arquivo-texto no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'cat_falsificado':

$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
$ ./cat_falsificado ola.txt
$ Ola mundo cruel! Ola universo ingrato!
Crie um código em C que conta a ocorrência de uma palavra-chave em um arquivo-texto, e escreve o resultado no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'busca_e_conta':
$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
$ ./busca_e_conta Ola ola.txt
$ 'Ola' ocorre 2 vezes no arquivo 'ola.txt'.
© 2018 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About

#include <stdio.h>
#include <stdlib.h>
#include "bib_arqs.h"

int main(int argc, char *argv){
	
	char conteudo[100];
	char nome_arquivo[20];

	printf("Nome do arquivo: ");
	scanf("%s",nome_arquivo);
	
	le_arq_texto(nome_arquivo,conteudo);

	printf("%s",conteudo);

	return 0;
}
